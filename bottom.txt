package com.Mahad.coffeeemahad

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.outlined.Info
import androidx.compose.material.icons.outlined.Menu
import androidx.compose.material.icons.outlined.ShoppingCart
import androidx.compose.material.icons.outlined.Star
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color.Companion.Cyan
import androidx.compose.ui.graphics.Color.Companion.Yellow
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp

data class NavPage(var name:String, var icon: ImageVector,
    var route: String){
}

object Routes{
    val MenuPage = NavPage("Menu", Icons.Outlined.Menu, "menu")
    val offersPage = NavPage("Offers", Icons.Outlined.Star, "menu")
    val OrderPage = NavPage("Order", Icons.Outlined.ShoppingCart, "menu")
    val InfoPage = NavPage("Info", Icons.Outlined.Info, "menu")
    val pages = listOf(offersPage, MenuPage, OrderPage, InfoPage)
}

@Composable
fun NavBarItem(page: NavPage, selected: Boolean = false, modifier: Modifier = Modifier) {
    Column(horizontalAlignment = Alignment.CenterHorizontally,
        modifier = modifier.padding(horizontal = 12.dp)) {
        Image(
            imageVector = page.icon,
            contentDescription = page.name,
            /*colorFilter = ColorFilter.tilt(
                if (selected) Cyan else Yellow
            ),*/
            modifier = Modifier
                .padding(bottom = 8.dp)
                .size(24.dp)
        )
        Text(page.name,
            fontSize = 12.sp,
            color = if (selected) Cyan else Yellow
        )
    }
}

@Preview
@Composable
fun NavBarItem_Preview() {
    NavBarItem(page = Routes.MenuPage)
}

//@Preview
@Composable
fun NavBar(selectedRoute: String = Routes.MenuPage.route,
           onChange:(String)->Unit
) {
    Row(
        horizontalArrangement= Arrangement.SpaceBetween,
        modifier = Modifier
            .fillMaxWidth()
            .background(MaterialTheme.colorScheme.primary)
            .padding(16.dp)
    ) {
        for (pages in Routes.pages) {
            NavBarItem(page = pages,
                selected = selectedRoute == pages.route,
                modifier = Modifier.clickable {
                onChange(pages.route)
                }
            )
        }
    }
}